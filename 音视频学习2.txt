纹理渲染，rgb渲染区别。
纹理渲染 给到显卡的是描述信息，通过gpu积算渲染。
纹理占主内存很少，rgb是cpu积算好的数据给显卡。

内存图像->渲染器->纹理->给到显卡->显卡通过计算展示出来。


avcodec_find_encoder_by_name("libfdk_aac");   //可以使用自定义编码器
avcodec_find_encoder(AV_CODEC_ID_AAC);  // 只能使用ffmpeg内部的编码器
过去商业软件，都会使用第三方编码器，编码效率高，最近内部编码器效率也提高了，都可以使用

混音如何实现？

YUV  Y表示亮度， UV表示色彩和饱和度。
yuv 最常用的是 420，显示器单行只有一个uv分量
GOP 强相关的一组帧，gop中一组帧，其中差别很小
I帧 关键帧 GOP中的第一帧为IDR帧，一种特殊的I帧。I帧不依赖与其他参考帧，帧内压缩。
P帧 向前参考帧(不参考后面)，压缩时之参考前面处理的帧，采用帧间压缩技术，大小为I帧的一半。
B帧 双向参考帧，既参考前面，又参考后面。帧间压，大小为I帧的1/4。P帧解码优先于B帧。
解码之后就不分I,P,B帧了，都是一帧一帧的图像。
B帧解码效率底，占用更多的cpu。

实时通信，音视频会议一般使用I帧和P帧，很少使用B帧。
音视频转码服务，一般使用B帧，减少占用空间。

IDR帧，
特殊的I帧，解码器立即刷新帧。
遇到IDR帧，解码器会将解码器缓冲区数据全部清空。
每个GOP第一帧是IDR帧。
IDR是一种特殊帧

h264 结构
h264 I BBBP BBBP BBBP 循环
B帧不参考B帧，之参考相邻的I帧和P帧。 
参考之的是解码时参考，解码顺序和播放顺序不同。
P帧先解码，不先播放

SPS：(序列参数 集)
PPS：(图像参数 集)  这里需要重新理解
SPS，PPS：成对出现在IDR帧前

摄像头捕捉的是 yuv

摄像头->信源编码器(打乱成很多快)(划分宏块)->视频复合编码器()->传输缓冲器->传输编码器->h264码流


